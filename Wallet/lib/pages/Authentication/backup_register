import 'dart:math';

import 'package:dinari_wallet/components/alertDialog.dart';
import 'package:dinari_wallet/components/formvalidator.dart';
import 'package:dinari_wallet/db/db_helper.dart';
import 'package:dinari_wallet/models/account.dart';
import 'package:dinari_wallet/models/user.dart';
import 'package:dinari_wallet/pages/Authentication/login_page.dart';
import 'package:dinari_wallet/provider/account.dart';
import 'package:dinari_wallet/provider/auth.dart';
import 'package:dinari_wallet/utils/appColor.dart';
import 'package:flutter/material.dart';
import 'package:pin_code_text_field/pin_code_text_field.dart';
import 'package:provider/provider.dart';
import 'package:web3dart/crypto.dart';
import 'package:web3dart/web3dart.dart';

class Register extends StatefulWidget {
  const Register({Key key}) : super(key: key);

  @override
  State<Register> createState() => _RegisterState();
}

class _RegisterState extends State<Register> {
  final _formKey = GlobalKey<FormState>();
  //FocusNodes
  FocusNode _emailFocusNode;
  FocusNode _pinFocusNode;
  //TextEditing controller
  TextEditingController _emailcontroller = TextEditingController();
  TextEditingController _pincontroller = TextEditingController();
  bool submitValid = false;
  DbHelper _handler;
  bool isLoading = false;
  @override
  void initState() {
    super.initState();
    _handler = DbHelper();
    _emailFocusNode = FocusNode();
    _pinFocusNode = FocusNode();
    _emailcontroller = TextEditingController();
    _pincontroller = TextEditingController();
  }

  @override
  void dispose() {
    _emailFocusNode.dispose();
    _pinFocusNode.dispose();
    _emailcontroller.dispose();
    _pincontroller.dispose();
    super.dispose();
  }

  signUp(String email, String passwd, context) async {
    // var account = Provider.of<GenerateAccountProvider>(context);
    User uModel = User(null, email, passwd);
    print('BEFORE');
    await _handler.saveData(uModel).then((userData) {
      print('AFTER');
      if (userData != null) {
        // setLoading(false);
        // account.generateKey;
        alertDialog(context, "Successfully Saved");
        Navigator.push(
            context, MaterialPageRoute(builder: (_) => const Login()));
        // notifyListeners();
      } else {
        // setLoading(false);
        alertDialog(context, "User exist");
        // notifyListeners();
      }
    }).catchError((error) {
      print(error);
      // setLoading(false);
      alertDialog(context, "Error: Data Save Fail");
      // notifyListeners();
    });
  }

  generateKey() async {
    var rng = Random.secure();

    var credentials = EthPrivateKey.createRandom(rng);
    var address = await credentials.extractAddress();
    var pubkey = bytesToHex(credentials.encodedPublicKey);
    var privkey = bytesToHex(credentials.privateKey);
    var name = 'Account 1';
    var balance = 0;
    var userId = 1;

    Account aModel = Account(
        privateKey: privkey,
        publicKey: pubkey,
        address: address.toString(),
        name: name,
        balance: balance,
        userId: userId);
    _handler.saveAccount(aModel);
    // insert data into account table with the obtained keys and address
  }

  @override
  Widget build(BuildContext context) {
    final account = Provider.of<GenerateAccountProvider>(context);
    var auths = Provider.of<AuthenticationProvider>(context);

    return Scaffold(
      body: SingleChildScrollView(
        child: Form(
          key: _formKey,
          child:
              Column(crossAxisAlignment: CrossAxisAlignment.center, children: [
            const SizedBox(
              height: 120,
            ),
            const Center(
              child: SizedBox(
                  height: 60,
                  width: 60,
                  child: Image(image: AssetImage('assets/images/logo.png'))),
            ),
            const SizedBox(
              height: 20,
            ),
            const Text(
              'Dinari',
              style: TextStyle(
                  color: Pallete.colorBlue,
                  fontSize: 32,
                  fontWeight: FontWeight.bold),
            ),
            const SizedBox(
              height: 15,
            ),
            const Text(
              'Register an account',
              style: TextStyle(fontSize: 16),
            ),
            Padding(
                padding:
                    const EdgeInsets.symmetric(horizontal: 20.0, vertical: 10),
                child: EmailFormField(
                  controller: _emailcontroller,
                )),
            Padding(
                padding:
                    const EdgeInsets.symmetric(horizontal: 10.0, vertical: 10),
                child: Row(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    const Text(
                      'Enter pin: ',
                      style: TextStyle(
                          fontSize: 14,
                          fontWeight: FontWeight.bold,
                          color: Colors.grey),
                    ),
                    PinCodeTextField(
                      controller: _pincontroller,
                      maxLength: 4,
                      // appContext: context,
                      onTextChanged: (p0) {
                        print(p0);
                      },
                      pinBoxWidth: 45,
                      pinBoxHeight: 40,
                      defaultBorderColor: Colors.grey.shade400,
                    )
                  ],
                )),
            // Center(
            //     child: Row(
            //   mainAxisAlignment: MainAxisAlignment.center,
            //   children: [
            //     const Text('Does you have account '),
            //     TextButton(
            //         onPressed: () {
            //           Navigator.push(
            //             context,
            //             MaterialPageRoute(builder: (_) => const Login()),
            //           );
            //         },
            //         child: const Text('login',
            //             style: TextStyle(color: Colors.grey, fontSize: 15)))
            //   ],
            // )),
            // Center(
            //     child: TextButton(
            //         onPressed: () {},
            //         child: const Text('recover your password',
            //             style: TextStyle(color: Colors.grey, fontSize: 15)))),
            const SizedBox(
              height: 10,
            ),
            Stack(
              children: [
                Padding(
                  padding: const EdgeInsets.symmetric(horizontal: 20),
                  child: SizedBox(
                    height: 40,
                    width: double.infinity,
                    child: ElevatedButton(
                      style: ElevatedButton.styleFrom(
                          primary: Pallete.colorOrange),
                      onPressed: (() async {
                        if (_formKey.currentState.validate()) {
                          auths.setLoading(true);
                          _formKey.currentState.save();
                          await signUp(_emailcontroller.text,
                              _pincontroller.text, context);
                        }
                      }),
                      child: Text(
                        'Submit',
                        style: Theme.of(context)
                            .textTheme
                            .headline6
                            .copyWith(color: Colors.white),
                      ),
                    ),
                  ),
                ),
                Positioned(
                  right: 30,
                  bottom: 0,
                  top: 0,
                  child: (isLoading)
                      ? Center(
                          child: SizedBox(
                            height: 25,
                            width: 25,
                            child: Theme(
                              data: ThemeData(
                                primaryColor: const Color(0xFFFFFFFF),
                              ),
                              child: const CircularProgressIndicator(
                                backgroundColor: Colors.white,
                                valueColor: AlwaysStoppedAnimation<Color>(
                                  Pallete.colorBlue,
                                ),
                              ),
                            ),
                          ),
                        )
                      : Container(),
                )
              ],
            ),
            // const SizedBox(
            //   height: 5,
            // ),
            Center(
                child: Row(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                const Text(
                  'Does you have account?',
                  style: TextStyle(fontSize: 10),
                ),
                TextButton(
                    onPressed: () {
                      Navigator.push(
                        context,
                        MaterialPageRoute(builder: (_) => const Login()),
                      );
                    },
                    child: const Text('login',
                        style: TextStyle(color: Colors.grey, fontSize: 10)))
              ],
            )),
            Center(
                child: TextButton(
                    onPressed: () {},
                    child: const Text('recover your password',
                        style: TextStyle(color: Colors.grey, fontSize: 10))))
          ]),
        ),
      ),
    );
  }

  _successfulSheet(BuildContext context) {
    showModalBottomSheet(
        context: context,
        builder: (BuildContext context) {
          return Wrap(
            children: const [
              ListTile(
                title: Center(
                    child: Text(
                        'Verification code sent to your email,Please verify your email',
                        style: TextStyle(
                            fontStyle: FontStyle.italic,
                            fontSize: 11,
                            color: Pallete.colorGreen))),
              )
            ],
          );
        });
  }
}
